package quiz;

import java.security.DomainCombiner;

public class C01_FunctionQuiz {

	/*
	 * # 다음 함수를 정의하고 올바르게 동작하는지 테스트 해보세요
	 * 
	 * 1. 전달한 문자가 알파벳이면 true를 반환, 아니면 false를 반환하는 함수
	 * 
	 * 2. 전달한 숫자가 3의 배수이면 true를 반환, 아니면 false를 반환하는 함수
	 * 
	 * 3. 숫자를 하나 전달하면 문자열 "짝수입니다" 또는 "홀수입니다"를 반환하는 함수
	 * 
	 * 4. 숫자를 전달하면 해당 숫자의 모든 약수를 int[]로 반환하는 함수
	 * 
	 * 5. 전달한 정수가 소수(prime)라면 true를 반환하고 아니면 false를 반환하는 함수
	 * 
	 * 6. 메세지와 횟수를 전달하면 해당 메세지를 전달한 횟수만큼 반복하는 함수
	 */

	// 1번
	public static boolean alphabetTest(char alphabet) {

		if (alphabet >= 'A' && alphabet <= 'Z' || alphabet >= 'a' && alphabet <= 'z') {
			return true;
		} else {
			return false;
		}
	}

	// 2번
	public static boolean number2(int num2) {
		if (num2 % 3 == 0) {
			return true;
		} else {
			return false;
		}
	}

	// 3번
	public static String number3(int num3) {
		if (num3 % 2 == 0) {
			return "짝수입니다";
		} else {
			return "홀수입니다";
		}
	}

	public static int[] number4(int num4) {
		// cnt는 카운트. num4를 1, 2, 3 ... i로 나눴을때 나머지가 0인 경우마다 숫자를 센다
	    int cnt = 0;
	    for (int i = 1; i <= num4; i++) {
	        if (num4 % i == 0) {
	            cnt++;
	        }
	        // 체크용임 약수의 개수만큼 cnt가 생기는걸 볼 수 있다
	        System.out.println("약수가 아니면 이전 숫자가 그대로 나옴" + cnt);
	    }
	    // int 배열형 div에 cnt(배열의 개수)를 넣기 위해서 new 연산자 + int[cnt]형태로 함수를 생성한다
	    int[] div = new int[cnt];
	    // System.out.println(Arrays.toString(div));
	    int len = 0;
	    // cnt는 약수의 개수이므로 12를 입력시 6이 된다(약수의 갯수가 6개임)
	    // int div[6] 배열에 1부터 12까지 나머지가 0일때마다 div[길이]가 늘어날때마다 i를 집어 넣는다
	    for (int i = 1; i <= num4; i++) {
	    	// 입력한 숫자가 0이 되면 
	        if (num4 % i == 0) {
	            div[len++] = i;
	            System.out.println(len);
	        }
	    }
	    // number4에 div를 반환한다. div는 div[배열의 위치] 마다 i의 값을 집어넣음
	    return div;
	}

	// 5번
	public static boolean number5(int num5) {

		for (int i = 2; i < num5; i++) {
			if (num5 % i == 0) {
			} else {
				return false;
			}
		}
		return true;

	}
	// 6번

	public static void main(String[] args) {

		// 1번
		System.out.println(alphabetTest('한'));

		// 2번
		System.out.println(number2(1));

		// 3번
		System.out.println(number3(3));

		// 5번
		System.out.println(number5(8));
	}

}
