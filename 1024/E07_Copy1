package quiz;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.Arrays;

public class E07_Copy1 {

	// 1. myfiles의 파일들 중 .txt 파일들을 mytxts에 복사해보세요

	// 2. myfiles의 파일들 중 그림 파일들을 myimages 폴더에 복사해보세요
	public void copy(String f) {
		try {
			FileWriter in = 
					new FileWriter("myfiles/" + f);
							Charset.forName("UTF-8");
		System.out.println(f);
			in.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		FileReader out = null;
		
		try {
			out = new FileReader("myfiles/mytxts/" + f,
					Charset.forName("UTF-8"));
			
			// read(char[]) : 전달한 배열 크기만큼 읽는다.
			// 읽은 글자의 길이를 반환하고 파일의 끝에 도달하면 -1을 리턴한다
			
			char[] buff = new char[1024];
			
			int len = out.read(buff);
			
			// char[]과 길이를 사용해 문자열 인스턴스를 생성할 수 있다
			System.out.println(new String(buff, 0, len));
			
			int ch;
			while ((ch = out.read()) != -1) {
				System.out.print((char)ch);}
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			// close를 finally문에 하면 100% 확률로 닫을 수 있다
			try {
				if (out != null) {
					out.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	
	public static void main(String[] args) {

		File f3 = new File("C:/JavaFullStack_YJH/workspace/JavaStudy/myfiles");

		String[] files = f3.list();
		
		System.out.println(Arrays.toString(files));
		for (String f : files) {
			
			if (f.contains(".txt") == true) {
				System.out.println(f);
			}

		}
		
	}

}
