# 프로그래밍 언어 (Programming Language, PL)

 - 컴퓨터는 사람의 말을 이해할 수 없다.
 - 컴퓨터느 0과 1만 이해할 수 있다. 
 - 전류가 통하면 1이고 전류가 안 통하면 0으로 간주하여 두 가지를 구분할 수 있다.
 - 원래는 0과 1만으로 프로그램을 만들어줘야 하지만, 너무 힘들어서
   사람의 언어와 프로그램 언어의 중간 단계인 프로그래밍 언어가 생겼다.
 - 프로그래밍 언어는 컴퓨터가 바로 알아들을 수는 없다.
 - 프로그래밍 언어를 컴퓨터가 알아들을 수 있는 형태로 번역하는 과정을 
   '컴파일(Compile)'이라고 한다.
 - 프로그래머가 프로그래밍 언어로 작성한 파일을 소스 코드(source code) 라고 부른다.
 - 소스 코드를 컴파일 해주는 프로그램을 컴파일러(Compiler)라고 부른다.
 - 소스 코드를 컴파일러로 컴파일 하면 실행 가능한 실행 파일이 생성된다.
 - 사람이 알아듣기 쉬워질수록 고수준 프로그래밍 언어(high-level language)라고 하고
   컴퓨터가 알아듣기 쉬워질수록 저수준 프로그래밍 언어(low-level language)라고 한다.
 - 고수준 프로그래밍 언어: Java, Python, Kotlin, C# ...
 - 저수준 프로그래밍 언어: C, C++ ... (컴퓨터가 이해하기 쉬움. 인간은 어렵다...)
 - 고수준 프로그래밍 언어는 개발 진행속도가 빠르고(저렴하다) 
   실행 속도는 저수준 프로그래밍 언어보다 느리다(쓸만함)
 - 저수준 프로그래밍 언어는 개발 진행 속도가 느리다(비용이 많이 발생함)
   실행 속도와 프로그램의 정확도가 굉장히 높다(우주선, 자율주행 등에 사용)
* 위 과정을 통합하여 '빌드 과정' 이라고 한다.

# 컴파일러 방식 번역

 - 완성된 소스 코드를 통째로 번역하여 한 번에 실행 파일을 생성하는 방식
 - 실행 파일로 실행하기 때문에 실행 속도가 빠른 편이다
 - C, C++, Java, ...

# 인터프리터 방식 번역

 - 소스 코드를 한 줄씩 번역하여 바로바로 실행하는 방식
 - 실행 속도는 느린편이나 수정 사항이 바로바로 반영된다는 장점이 있다
 - Phython, Javascript, ...

# JDK (Java Development Kit)

 - 자바 개발 도구 모음집
 - 자바로 프로그래밍을 진행하기 위해 필요한 모든 도구들이 모여있는 패키지 프로그램
   ex) 자바로 만든 소스 코드를 번역할 수 있는 컴파일러(javac)
        자바로 만든 실행 파일을 실행해 볼 수 있는 실행 환경(JRE) 등
 
